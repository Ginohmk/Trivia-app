Request Formatting
The frontend should be fairly straightforward and digestible. While working on your backend request handling and response formatting, you can reference the frontend to view how it parses the responses.

You are not required to make any edits, but if choose to do so, you'll primarily work within the components folder where you'll find the endpoints utilized by the components.

After you complete your endpoints, ensure you return to the frontend to confirm your API handles requests and responses appropriately:

Endpoints defined as expected by the frontend
Response body provided as expected by the frontend
Optional: Updating Endpoints and API behavior
Would you rather the API had different behavior - different endpoints, return the response body in a different format? Go for it! Make the updates to your API and the corresponding updates to the frontend so it works with your API seamlessly.

Optional: Styling
In addition, you may want to customize and style the frontend by editing the CSS in the stylesheets folder.

Optional: Game Play Mechanics
Currently, when a user plays the game they play up to five questions of the chosen category. If there are fewer than five questions in a category, the game will end when there are no more questions in that category.

You can optionally update the gameplay to increase the number of questions or whatever other game mechanics you decide. Make sure to specify the new mechanics of the game in the README of the repo you submit so the reviewers are aware that the behavior is correct.